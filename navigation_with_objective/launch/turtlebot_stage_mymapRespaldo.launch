<!-- 
  Turtlebot navigation simulation:
  - stage
  - map_server
  - move_base
  - static map
  - amcl
  - rviz view
 -->
<launch>
  <!-- Name of the map to use (without path nor extension) and initial position -->
   <arg name="model" default="$(env TURTLEBOT3_MODEL)" doc="model type [burger, waffle, waffle_pi]"/>
  <arg name="map_file"       default="/home/jharbin/catkin_ws/src/maps/mapWhiteCorridor.yaml"/>
  <arg name="move_forward_only" default="false"/>
  <arg name="open_rviz" default="true"/>
  <arg name="multi_robot_name" default=""/>
 <!-- psu -->
  
  <arg name="initial_pose_x" default="4.74"/>
  <arg name="initial_pose_y" default="-2.68"/>
  <arg name="initial_pose_z" default="0.0"/>

  
  <!--  ******************** Stage ********************  -->
  <!-- 
        Publishes transforms:
          /base_link -> /base_laser
          /base_footprint -> /base_link (identity)
          /odom -> base_footprint
        Publishes topics:
          /odom : odometry data from the simulated odometry
          /base_scan : laser data from the simulated laser
          /base_pose_ground_truth : the ground truth pose
        Parameters:
          base_watchdog_timeout : time (s) after receiving the last command on cmd_vel before stopping the robot
        Args:
          -g : run in headless mode.
  --> 
  
  <!--  ***************** Robot Model *****************  
  <include file="$(find turtlebot3_bringup)/launch/turtlebot3_remote.launch">
    <arg name="model" value="$(arg model)" />
  </include>-->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="/home/jharbin/catkin_ws/src/myWorlds/whiteCorridor.world"/>
    <arg name="paused" value="false"/>
    <arg name="use_sim_time" value="true"/>
    <arg name="gui" value="true"/>
    <arg name="headless" value="false"/>
    <arg name="debug" value="false"/>
  </include>
  <param name="robot_description" command="$(find xacro)/xacro --inorder $(find turtlebot3_description)/urdf/turtlebot3_$(arg model).urdf.xacro" />

  <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher">
    <param name="publish_frequency" type="double" value="50.0" />
    <param name="tf_prefix" value="$(arg multi_robot_name)"/>
  </node>

  <node pkg="gazebo_ros" type="spawn_model" name="spawn_urdf"  args="-urdf -model turtlebot3_$(arg model) -x $(arg initial_pose_x) -y $(arg initial_pose_y) -z $(arg initial_pose_z) -param robot_description" />	 

  <!--  ************** Navigation  ***************  -->
  <include file="$(find turtlebot3_navigation)/launch/move_base.launch">
    <arg name="model" value="$(arg model)" />
    <arg name="move_forward_only" value="$(arg move_forward_only)"/>
  </include>

  <!--  ****** Maps *****  -->
  <node pkg="map_server" name="map_server" type="map_server" args="$(arg map_file)">
    <param name="frame_id" value="/map"/>
  </node>

  <include file="$(find turtlebot3_navigation)/launch/amcl.launch">
    <arg name="scan_topic" value="scan"/>
    <arg name="initial_pose_x" value="$(arg initial_pose_x)"/>
    <arg name="initial_pose_y" value="$(arg initial_pose_y)"/>
    <arg name="initial_pose_a" value="$(arg initial_pose_z)"/>
  </include>

  <!--  **************** Visualisation **************** 
  <group if="$(arg open_rviz)"> 
    <node pkg="rviz" type="rviz" name="rviz" required="true"
          args="-d $(find turtlebot3_navigation)/rviz/turtlebot3_navigation.rviz"/>
  </group>-->
</launch>
